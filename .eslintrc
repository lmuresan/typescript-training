{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["react-hooks", "webdriverio", "no-only-tests", "@ppb/tbd-rules", "jasmine", "jest", "filenames"],
  "extends": [
    "plugin:jsx-a11y/recommended",
    "plugin:react/recommended",
    "airbnb-base",
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint",
    "plugin:prettier/recommended"
  ],
  "env": {
    "browser": true
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    "filenames/match-regex": [1, "^([a-z][a-z0-9]*)(-[a-z0-9]+)*(.test|.spec)?$", true],
    "@ppb/tbd-rules/connect-generics": "error",
    "@ppb/tbd-rules/components-export-types": "error",
    "@ppb/tbd-rules/components-namespacing": "error",
    "import/named": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/prop-types": "off",
    "global-require": "off",
    "@typescript-eslint/prefer-interface": "off",
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.spec.js",
          "web/regression-tests/**/*.js",
          "web/app/test-utils/**",
          "**/*.test.js",
          "**/*.test.ts",
          "**/*.stories.tsx"
        ]
      }
    ],
    "no-irregular-whitespace": [
      "error",
      {
        "skipTemplates": true
      }
    ],
    "no-console": "error"
  },
  "overrides": [
    {
      "files": [
        "packages/the-wall/**/*.tsx",
        "packages/the-wall/**/*.js",
        "web/app/components/**/*.tsx",
        "web/app/components/**/*.js"
      ],
      "rules": {
        "filenames/match-regex": [1, "^[A-Z][a-z]+(?:[A-Z][a-z]+)*(.test)?(.selectors)?(.stories)?$", true]
      }
    },
    {
      "files": ["web/app/custom-hooks/*", "packages/the-wall/src/hooks/*"],
      "rules": {
        "filenames/match-regex": [1, "^use[A-Z][a-z]+(?:[A-Z][a-z]+)*(.test)?$", true]
      }
    },
    {
      "files": ["packages/http-clients/src/request/request.js"],
      "globals": {
        "fetch": true
      }
    },
    {
      "files": [
        "web/regression-tests/**/*.js",
        "packages/the-wall/**/*.spec.js",
        "*.po.js",
        "packages/the-wall/**/*.conf.js",
        "*.selectors.js",
        "packages/tbd-wdio-custom-commands/**/*.js",
        "packages/wdio-lazy-element/*.js",
        "packages/saga-jest-setup/*.js"
      ],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
        "jasmine/expect-matcher": "warn",
        "jasmine/expect-single-argument": "warn",
        "jasmine/missing-expect": "off",
        "jasmine/named-spy": "off",
        "jasmine/new-line-before-expect": "error",
        "jasmine/new-line-between-declarations": "off",
        "jasmine/no-assign-spyon": "off",
        "jasmine/no-describe-variables": "off",
        "jasmine/no-disabled-tests": "warn",
        "jasmine/no-expect-in-setup-teardown": "warn",
        "jasmine/no-focused-tests": "error",
        "jasmine/no-global-setup": "error",
        "jasmine/no-pending-tests": "warn",
        "jasmine/no-promise-without-done-fail": "warn",
        "jasmine/no-spec-dupes": "off",
        "jasmine/no-suite-callback-args": "error",
        "jasmine/no-suite-dupes": "off",
        "jasmine/no-unsafe-spy": "warn",
        "jasmine/prefer-jasmine-matcher": "warn",
        "jasmine/prefer-toHaveBeenCalledWith": "warn",
        "jasmine/prefer-toBeUndefined": "off",
        "no-console": "off",
        "no-restricted-syntax": [
          "error",
          {
            "selector": "CallExpression[callee.object.name='browser'][callee.property.name='pause']",
            "message": "Don't use browser.pause(), you should use browser.waitUntil() instead"
          },
          {
            "selector": "CallExpression[callee.name='describe'] > ArrowFunctionExpression[async=true]",
            "message": "Async describe's won't run the tests"
          },
          {
            "selector": "CallExpression[callee.object.name='browser'][callee.property.name='waitUntil'] CallExpression[callee.property.name='isDisplayed']",
            "message": "Use browser.waitUntilDisplayed() instead"
          }
        ],
        "no-only-tests/no-only-tests": "error"
      },
      "env": {
        "webdriverio/wdio": true,
        "jasmine": true
      }
    },
    {
      "files": ["**/*.test.js", "**/*.test.ts", "**/saga-jest-setup.js"],
      "env": {
        "jest": true
      },
      "rules": {
        "jest/consistent-test-it": ["error", { "fn": "it", "withinDescribe": "it" }],
        "no-only-tests/no-only-tests": "error",
        "react-hooks/rules-of-hooks": "off"
      }
    },
    {
      "files": ["**/jest.config.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "no-console": "off"
      }
    },
    {
      "files": ["bff/bf-tbd-interval-accounts/**/*", "bff/bf-tbd-http-access-control/**/*"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": ["bff/bf-tbd-http-bff-gql/**/*"],
      "rules": {
        "no-useless-constructor": "off",
        "@typescript-eslint/array-type": "generic",
        "no-restricted-syntax": "off"
      }
    },
    {
      "files": ["bff/bf-tbd-http-bff-gql/src/types/*"],
      "rules": {
        "@typescript-eslint/consistent-type-definitions": "off",
        "import/newline-after-import": "off",
        "import/order": "off",
        "@typescript-eslint/no-explicit-any": "off"
      }
    },
    {
      "files": ["bff/bf-tbd-http-bff-gql/src/**/*.test.ts"],
      "rules": {
        "@typescript-eslint/no-object-literal-type-assertion": "off",
        "@typescript-eslint/no-angle-bracket-type-assertion": "off",
        "no-underscore-dangle": "off"
      }
    },
    {
      "files": ["bff/bf-tbd-http-access-control/**/*"],
      "globals": {
        "TemporaryRedirectError": true
      }
    },
    {
      "files": ["packages/tbd-gql-loader/**/*.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ]
}
